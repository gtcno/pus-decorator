name: Test, build, push and deploy
on: push
env:
  IMAGE_TAG: ${{ github.sha }}
  IMAGE: docker.pkg.github.com/${{ github.repository }}/veilarbdialog
  PRINT_PAYLOAD: true
  FASIT_MOCK_ENABLED: true

jobs:
  test:
    name: Run tests
    runs-on: ubuntu-latest
    if: github.ref != 'refs/heads/dev' && github.ref != 'refs/heads/master'
    steps:
      - name: Checkout
        uses: actions/checkout@v1
      - name: Set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8
      - name: Set up cache
        uses: actions/cache@v1
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-maven-
      - name: Run maven tests
        run: mvn -B verify
  test-build-and-push:
    name: Test, build and push
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/master'
    steps:
      - name: Checkout
        uses: actions/checkout@v1
      - name: Set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8
      - name: Set up cache
        uses: actions/cache@v1
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-maven-
      - name: Build maven artifacts
        run: mvn -B package
      - name: Build and push Docker image
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          docker build -t ${IMAGE}:${IMAGE_TAG} .
          docker login docker.pkg.github.com -u ${GITHUB_REPOSITORY} -p ${GITHUB_TOKEN}
          docker push ${IMAGE}:${IMAGE_TAG}